#sed -i '/-A INPUT -j REJECT/i\-A INPUT -p tcp -m tcp -m state --state NEW -m multiport --dports 10250 -m comment --comment "k8s" -j ACCEPT' /etc/sysconfig/iptables
#systemctl restart  iptables.service docker.service
systemctl stop iptables.service
# ipvs
#modprobe ip_vs && modprobe ip_vs_rr && modprobe ip_vs_wrr && modprobe ip_vs_sh
cat << EOF > /etc/sysconfig/modules/ipvs.modules 
#!/bin/bash
ipvs_modules_dir="/usr/lib/modules/\`uname -r\`/kernel/net/netfilter/ipvs"
for i in \`ls \$ipvs_modules_dir | sed  -r 's#(.*).ko.*#\1#'\`; do
    /sbin/modinfo -F filename \$i  &> /dev/null
    if [ \$? -eq 0 ]; then
        /sbin/modprobe \$i
    fi
done
EOF

chmod +x /etc/sysconfig/modules/ipvs.modules 
bash /etc/sysconfig/modules/ipvs.modules
# off swap
swapoff -a
# iptables
echo "1" > /proc/sys/net/bridge/bridge-nf-call-iptables
# net.ipv4.conf.all.rp_filter=1
if [ `awk '/net.ipv4.conf.all.rp_filter/' /etc/sysctl.conf|wc -l` -lt 1 ]; then 
   echo "net.ipv4.conf.all.rp_filter=1" >> /etc/sysctl.conf
fi
    
if [ `awk '/net.ipv4.conf.all.rp_filter/' /etc/sysctl.conf|wc -l` -ge 1 ]; then 
  sed 's/net.ipv4.conf.all.rp_filter=.*/net.ipv4.conf.all.rp_filte=1/g' /etc/sysctl.conf   
fi
